name: Upload to S3 
# run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches:
      - main

env:
  BUCKET_NAME: "sean-seungeon-kim.com"
  AWS_REGION: "us-east-1"

permissions: # Use OIDC to authenticate with AWS(IAM Role, STS)
  id-token: write
jobs:
  sync-s3:
    runs-on: ubuntu-latest # can this be changed? would it be faster if we use something lighter?
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "Latest Commit SHA - ${{ github.sha }} "
      - run: echo "Latest Commit Message - ${{ github.event.head_commit.message }}"
      - name: Configure AWS Credentials for us-east-1
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::434313666842:role/sean-seungeon-kim.com-role
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: true # Do not show sensitive data
      - name: Generate Exclusions
        id: exclusions
        env:
          EXCLUDE_FILE_PATH: ".github/workflows/generate-s3-exclude/exclude.txt"
        run: |
          # chmod +x ${{ env.EXCLUDE_FILE_PATH }} && EXCLUDE_ARGS=$(${{ env.EXCLUDE_FILE_PATH }})
          EXCLUDE_ARGS=""
          # Check if the exclude file exists
          if [[ ! -f "${{ env.EXCLUDE_FILE_PATH}}" ]]; then
            echo "Error: Exclude file '${{ env.EXCLUDE_FILE_PATH}}' not found."
            exit 1
          fi

          # Read each line from the exclude file
          while IFS= read -r line || [ -n "$line" ]; do
            # Skip empty lines or lines that start with a hash (#, used for comments)
            [[ -z "$line" || "$line" =~ ^# ]] && continue

            # Add the line as a --exclude argument
            EXCLUDE_ARGS+="--exclude \"$line\" "
          done < "${{ env.EXCLUDE_FILE_PATH}}"

          # Output the exclude arguments
          echo "echo '$EXCLUDE_ARGS'"
          echo "$EXCLUDE_ARGS"

          echo "EXCLUDE_ARGS=${EXCLUDE_ARGS}" >> $GITHUB_ENV
          
      - name: Sync website files to S3
        run: |
          aws s3 sync ./_site/ "s3://${{ env.BUCKET_NAME }}" \
            --delete \
            ${{ env.EXCLUDE_ARGS }}

